{
  "contractName": "TestCrowdsaleController",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "BTCS_ETHER_CAP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TOKEN_PRICE_D",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bancorX",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "contributeETH",
      "outputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DURATION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_contribution",
          "type": "uint256"
        }
      ],
      "name": "computeReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferTokenOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalEtherCap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptTokenOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TOKEN_PRICE_N",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "realEtherCapHash",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "_key",
          "type": "uint256"
        }
      ],
      "name": "enableRealCap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "contributeBTCs",
      "outputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalEtherContributed",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "btcs",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bancorX",
          "type": "address"
        }
      ],
      "name": "setBancorX",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "_key",
          "type": "uint256"
        }
      ],
      "name": "computeRealCap",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_GAS_PRICE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BTCS_ETHER_CAP_SMALL",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "name": "_btcs",
          "type": "address"
        },
        {
          "name": "_realEtherCapHash",
          "type": "bytes32"
        },
        {
          "name": "_startTimeOverride",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_return",
          "type": "uint256"
        }
      ],
      "name": "Contribution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_prevOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdate",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"BTCS_ETHER_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_PRICE_D\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bancorX\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contributeETH\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DURATION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_contribution\",\"type\":\"uint256\"}],\"name\":\"computeReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferTokenOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEtherCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptTokenOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_PRICE_N\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"realEtherCapHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cap\",\"type\":\"uint256\"},{\"name\":\"_key\",\"type\":\"uint256\"}],\"name\":\"enableRealCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contributeBTCs\",\"outputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalEtherContributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"btcs\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bancorX\",\"type\":\"address\"}],\"name\":\"setBancorX\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_cap\",\"type\":\"uint256\"},{\"name\":\"_key\",\"type\":\"uint256\"}],\"name\":\"computeRealCap\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_GAS_PRICE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BTCS_ETHER_CAP_SMALL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_startTime\",\"type\":\"uint256\"},{\"name\":\"_beneficiary\",\"type\":\"address\"},{\"name\":\"_btcs\",\"type\":\"address\"},{\"name\":\"_realEtherCapHash\",\"type\":\"bytes32\"},{\"name\":\"_startTimeOverride\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_contributor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_return\",\"type\":\"uint256\"}],\"name\":\"Contribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\\r\"},\"acceptTokenOwnership()\":{\"details\":\"used by a new owner to accept a token ownership transfer\\r can only be called by the contract owner\\r\"},\"claimTokens(address,uint256)\":{\"details\":\"allows the associated BancorX contract to claim tokens from any address (so that users\\r dont have to first give allowance when calling BancorX)\\r \\r\",\"params\":{\"_amount\":\"the amount of tokens to claim\\r\",\"_from\":\"address to claim the tokens from\\r\"}},\"computeRealCap(uint256,uint256)\":{\"details\":\"computes the real cap based on the given cap & key\\r \\r\",\"params\":{\"_cap\":\"cap\\r\",\"_key\":\"key used to compute the cap hash\\r \\r\"},\"return\":\"computed real cap hash\\r\"},\"computeReturn(uint256)\":{\"details\":\"computes the number of tokens that should be issued for a given contribution\\r \\r\",\"params\":{\"_contribution\":\"contribution amount\\r \\r\"},\"return\":\"computed number of tokens\\r\"},\"contributeBTCs()\":{\"details\":\"Contribution through BTCs (Bitcoin Suisse only)\\r can only be called before the crowdsale started\\r \\r\",\"return\":\"tokens issued in return\\r\"},\"contributeETH()\":{\"details\":\"ETH contribution\\r can only be called during the crowdsale\\r \\r\",\"return\":\"tokens issued in return\\r\"},\"enableRealCap(uint256,uint256)\":{\"details\":\"enables the real cap defined on deployment\\r \\r\",\"params\":{\"_cap\":\"predefined cap\\r\",\"_key\":\"key used to compute the cap hash\\r\"}},\"setBancorX(address)\":{\"details\":\"allows the owner to set the associated BancorX contract\\r\",\"params\":{\"_bancorX\":\"BancorX contract\\r\"}},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership\\r the new owner still needs to accept the transfer\\r can only be called by the contract owner\\r \\r\",\"params\":{\"_newOwner\":\"new contract owner\\r\"}},\"transferTokenOwnership(address)\":{\"details\":\"allows transferring the token ownership\\r the new owner needs to accept the transfer\\r can only be called by the contract owner\\r \\r\",\"params\":{\"_newOwner\":\"new token owner\\r\"}},\"withdrawFromToken(address,address,uint256)\":{\"details\":\"withdraws tokens held by the controller and sends them to an account\\r can only be called by the owner\\r \\r\",\"params\":{\"_amount\":\"amount to withdraw\\r\",\"_to\":\"account to receive the new amount\\r\",\"_token\":\"ERC20 token contract address\\r\"}},\"withdrawTokens(address,address,uint256)\":{\"details\":\"withdraws tokens held by the contract and sends them to an account\\r can only be called by the owner\\r \\r\",\"params\":{\"_amount\":\"amount to withdraw\\r\",\"_to\":\"account to receive the new amount\\r\",\"_token\":\"ERC20 token contract address\\r\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/helpers/TestCrowdsaleController.sol\":\"TestCrowdsaleController\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/crowdsale/CrowdsaleController.sol\":{\"keccak256\":\"0xd54ac7841f0387f8474e7ab788ad598c8513267761f0148fb7893f4d46c50d06\",\"urls\":[\"bzzr://a0d19d8da71053cc0b4144e658a5b2d442cfe50d60b45c905d5ee737818d812e\"]},\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/helpers/TestCrowdsaleController.sol\":{\"keccak256\":\"0x1127bbb08c50cc280dd87127b10238a1ca990431465419483198d69c006b11a7\",\"urls\":[\"bzzr://4b144f7aa0cabeab87f5318a2cfec068afe6ae97a239e075dfe5fac1b7fc31c7\"]},\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/token/SmartTokenController.sol\":{\"keccak256\":\"0xdfbb644f0c6d595c4250d1b3dc285b84eb55f83671e9cca27060aa9c1c3815a0\",\"urls\":[\"bzzr://a210e451eed7b78bf2e74bf31f8be2a2127b77c6e5af0241aa6790067e305c80\"]},\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/token/interfaces/IERC20Token.sol\":{\"keccak256\":\"0xc1dbe021e4c5a19475048b9894ef9f1e25b922258724185ad051e54ad11c37cd\",\"urls\":[\"bzzr://f2c3cf6469aa2fdaff4b4c620f5404811d7a7c2db2231ca15e41b1b7b58526f9\"]},\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/token/interfaces/INonStandardERC20.sol\":{\"keccak256\":\"0xcd642e7946e6781417be0f80ce5c15249cc6a822ac1f393eba746edb57b2a51c\",\"urls\":[\"bzzr://729a3ef24b26d3425eca5a3b6dca9d902e4695ec03f1970937f9cec194d97b80\"]},\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/token/interfaces/ISmartToken.sol\":{\"keccak256\":\"0x625bca84d2d9d821993ab70286b8862a5dd5e314a15939012de4907ce2994b39\",\"urls\":[\"bzzr://6add47367a0d036ca02ea19688b73472ba2d0a762d1cbbb4ca8558ba98c702d6\"]},\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/token/interfaces/ISmartTokenController.sol\":{\"keccak256\":\"0xdb60fe6c7948bac7167404ce6076cdbe161c8b9b2920b55bfc07372a2371ca53\",\"urls\":[\"bzzr://60732d5e3d7edb31f854950679c457a013cb26db75de84ff4fbbd24cdaa5b56b\"]},\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/utility/Owned.sol\":{\"keccak256\":\"0xce659c948fd6e652d14c1e98790fcbaac7e2b2cfb25f7fe40a723055f7403396\",\"urls\":[\"bzzr://c281f9a24b13a168b9e720444280dc9f125646e388d5a3e579a7850376f26c25\"]},\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/utility/SafeMath.sol\":{\"keccak256\":\"0x3cc745bed1f0adbfc77c9b97470ed57d92a204e82bde521a1385f175bb7b72ba\",\"urls\":[\"bzzr://7d40829f07a663162f8f9b57ff8107f3c7f4dbb737ecd93ba20868b25c9af830\"]},\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/utility/TokenHolder.sol\":{\"keccak256\":\"0x88e04f516c4dd0d83973edfd7301785656217768b07453ab50586fc4df0441a9\",\"urls\":[\"bzzr://39d021980ecf43e4fc24a97af237a0c711d37c19eccef93b07ef4342ccd7ccfa\"]},\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/utility/Utils.sol\":{\"keccak256\":\"0x6de760a463f6105446988b7bdcacc3dc525fdef4359a15a25cc0822e317c6b9a\",\"urls\":[\"bzzr://cbe079a4723e79f1b662a309c48ed9b32f4ce969b3dce2d080a151aef495c001\"]},\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/utility/interfaces/IOwned.sol\":{\"keccak256\":\"0x738d19fc1c5a71283c0bc400278e775b21c0cbf62c03852abde81ded30c9ba0f\",\"urls\":[\"bzzr://9064b8a0c73cdb04eb3c84519f8c53382881977c0b2de18532d9fa59148934de\"]},\"/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/utility/interfaces/ITokenHolder.sol\":{\"keccak256\":\"0xe652e6fb418265340bb9704e5ad9c33173de6ed6efc95114112915a8675ae9a3\",\"urls\":[\"bzzr://d537e87dd6bc47263da27a6a4e97fcebfc31bb5aa2e3a3d5082e3ef787a0e591\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "1069:29:20:-;141:762:26;1069:29:20;;141:762:26;1069:29:20;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1134:1:20;1107:28;;;;1197:26;;;;1316:13;1285:44;;1456:40;;1675:39;;;-1:-1:-1;;;;;;1675:39:20;;;;;;1774:32;;;;;;;;347:387:26;5:2:-1;;;;30:1;27;20:12;5:2;347:387:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;559:5:44;:18;;-1:-1:-1;;;;;;559:18:44;567:10;559:18;;;347:387:26;;;;;;;;;;;;;;-1:-1:-1;;;;;457:22:47;;;;449:31;;;;;;-1:-1:-1;1470:5:35;:14;;-1:-1:-1;;;;;;1470:14:35;-1:-1:-1;;;;;1470:14:35;;;;;;2513:12:20;;457:22:47;;;;449:31;;;;;;2549:5:20;-1:-1:-1;;;;;457:22:47;;;;449:31;;;;;;2577:10:20;3326:3;:11;-1:-1:-1;3319:19:20;;;;2622:17;296:1:47;286:11;;278:20;;;;;;-1:-1:-1;;2732:11:20;:26;;-1:-1:-1;;;;;2732:26:20;;;-1:-1:-1;;;;;;2732:26:20;;;;;;;2769:4;:12;;;;;;;;;;;;;;;2792:16;:36;-1:-1:-1;;;2658:9:20;657:30:26;;;-1:-1:-1;585:7:20;707:20:26;2691:7:20;697:30:26;-1:-1:-1;141:762:26;;-1:-1:-1;;;;141:762:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141:762:26;;;-1:-1:-1;141:762:26;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "141:762:26:-;;;;;;;;;-1:-1:-1;;;141:762:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7179:15:20;:13;:15::i;:::-;;141:762:26;841:52:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;841:52:20;;;;;;;;;;;;;;;;;;;;738:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;738:43:20;;;;1164:22:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1164:22:35;;;;;;;;-1:-1:-1;;;;;1164:22:35;;;;;;;;;;;;;;5552:181:20;;;;550:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;550:42:20;;;;5243:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5243:153:20;;;;;2040:121:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2040:121:35;-1:-1:-1;;;;;2040:121:35;;;;;;;1197:26:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1197:26:20;;;;1285:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1285:44:20;;;;2307:91:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2307:91:35;;;;1675:39:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1675:39:20;;;;2714:169:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2714:169:35;-1:-1:-1;;;;;2714:169:35;;;;;;;;;;;;637:41:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;637:41:20;;;;1069:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1069:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1069:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1263:260:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1263:260:46;-1:-1:-1;;;;;1263:260:46;;;;;;;;;;;;1107:28:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1107:28:20;;;;1193:187:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1193:187:44;;;;167:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;167:20:44;;;;1537:31:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1537:31:20;;;;4735:276;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4735:276:20;;;;;;;5928:238;;;;1456:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1456:40:20;;;;1774:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1774:32:20;;;;194:23:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;194:23:44;;;;3695:92:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3695:92:35;-1:-1:-1;;;;;3695:92:35;;;;;4400:147:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4400:147:20;;;;;;;951:55;;8:9:-1;5:2;;;30:1;27;20:12;5:2;951:55:20;;;;241:54:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;241:54:26;;;;962:140:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;962:140:44;-1:-1:-1;;;;;962:140:44;;;;;1107:24:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1107:24:35;;;;3202:352;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3202:352:35;-1:-1:-1;;;;;3202:352:35;;;;;;;5552:181:20;5665:14;5627:9;;5638:7;;3543:10;3536:3;:17;;:35;;;;;3563:8;3557:3;:14;3536:35;3529:43;;;;;;5704:21;:19;:21::i;:::-;5697:28;;5552:181;;;:::o;841:52::-;882:11;841:52;:::o;738:43::-;778:3;738:43;:::o;1164:22:35:-;;;-1:-1:-1;;;;;1164:22:35;;:::o;550:42:20:-;585:7;550:42;:::o;5243:153::-;5310:7;5337:51;677:1;5337:32;:13;778:3;5337:32;:17;:32;:::i;:::-;:36;:51;:36;:51;:::i;:::-;5330:58;5243:153;-1:-1:-1;;5243:153:20:o;2040:121:35:-;688:5:44;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;2119:5:35;;:34;;;;;;-1:-1:-1;;;;;2119:34:35;;;;;;;;;:5;;;;;:23;;:34;;;;;:5;;:34;;;;;;;:5;;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;2119:34:35;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2119:34:35;;;;2040:121;:::o;1197:26:20:-;;;;:::o;1285:44::-;;;;:::o;2307:91:35:-;688:5:44;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;2367:5:35;;;;;;;;;-1:-1:-1;;;;;2367:5:35;-1:-1:-1;;;;;2367:21:35;;:23;;;;;-1:-1:-1;;;2367:23:35;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2367:23:35;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2367:23:35;;;;2307:91::o;1675:39:20:-;;;-1:-1:-1;;;;;1675:39:20;;:::o;2714:169:35:-;688:5:44;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;2832:5:35;;2819:56;;;;;;-1:-1:-1;;;;;2819:56:35;;;;;;;;;;;;;;;;;;;;;;2832:5;;;;;2819:34;;:56;;;;;2832:5;;2819:56;;;;;;;2832:5;;2819:56;;;5:2:-1;;;;30:1;27;20:12;5:2;2819:56:35;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2819:56:35;;;;2714:169;;;:::o;637:41:20:-;677:1;637:41;:::o;1069:29::-;;;;;;;;;;;;;;;-1:-1:-1;;1069:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1263:260:46:-;688:5:44;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;1394:6:46;-1:-1:-1;;;;;457:22:47;;;;449:31;;;;;;1424:3:46;-1:-1:-1;;;;;457:22:47;;;;449:31;;;;;;1446:3:46;-1:-1:-1;;;;;636:25:47;;656:4;636:25;;628:34;;;;;;1485:6:46;-1:-1:-1;;;;;1467:34:46;;1502:3;1507:7;1467:48;;;;;-1:-1:-1;;;1467:48:46;;;;;;;-1:-1:-1;;;;;1467:48:46;-1:-1:-1;;;;;1467:48:46;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1467:48:46;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1467:48:46;;;;491:1:47;;705::44;1263:260:46;;;:::o;1107:28:20:-;;;;:::o;1193:187:44:-;1260:8;;-1:-1:-1;;;;;1260:8:44;1246:10;:22;1238:31;;;;;;1304:8;;;1297:5;;1285:28;;-1:-1:-1;;;;;1304:8:44;;;;1297:5;;;;1285:28;;;1332:8;;;;1324:16;;-1:-1:-1;;1324:16:44;;;-1:-1:-1;;;;;1332:8:44;;1324:16;;;;1351:21;;;1193:187::o;167:20::-;;;-1:-1:-1;;;;;167:20:44;;:::o;1537:31:20:-;;;;:::o;4735:276::-;688:5:44;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;1594:5:35;;:13;;;;;;;;1619:4;;-1:-1:-1;;;;;1594:5:35;;:11;;:13;;;;;;;;;;;;;;:5;;:13;;;5:2:-1;;;;30:1;27;20:12;5:2;1594:13:35;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1594:13:35;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1594:13:35;-1:-1:-1;;;;;1594:30:35;;1586:39;;;;;;4854:9:20;;4865:7;;3543:10;3536:3;:17;;:35;;;;;3563:8;3557:3;:14;3536:35;3529:43;;;;;;3173:16;;4897:4;;4903;;3143:26;4897:4;4903;3143:14;:26::i;:::-;:46;3135:55;;;;;;4940:13;;4933:20;;4925:29;;;;;;-1:-1:-1;;;4983:13:20;:20;;;;-1:-1:-1;;4735:276:20:o;5928:238::-;3702:4;;6098:14;;-1:-1:-1;;;;;3702:4:20;3688:10;:18;3681:26;;;;6037:9;288:7:26;815:43;841:16;815:21;;:25;;:43;;;;:::i;:::-;:67;;808:75;;;;6069:9:20;;3326:3;:11;-1:-1:-1;3319:19:20;;;1456:40;;;;:::o;1774:32::-;;;-1:-1:-1;;;;;1774:32:20;;:::o;194:23:44:-;;;-1:-1:-1;;;;;194:23:44;;:::o;3695:92:35:-;688:5:44;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;3761:7:35;:18;;-1:-1:-1;;3761:18:35;-1:-1:-1;;;;;3761:18:35;;;;;;;;;;3695:92::o;4400:147:20:-;4473:7;4527:4;4533;4510:28;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4510:28:20;;;4500:39;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;4500:39:20;;;;;;;;;;;;-1:-1:-1;;;;;;4400:147:20:o;951:55::-;991:15;951:55;:::o;241:54:26:-;288:7;241:54;:::o;962:140:44:-;688:5;;-1:-1:-1;;;;;688:5:44;674:10;:19;666:28;;;;;;1057:5;;-1:-1:-1;;;;;1044:18:44;;;1057:5;;1044:18;;1036:27;;;;;;1074:8;:20;;-1:-1:-1;;1074:20:44;-1:-1:-1;;;;;1074:20:44;;;;;;;;;;962:140::o;1107:24:35:-;;;-1:-1:-1;;;;;1107:24:35;;:::o;3202:352::-;3365:7;;-1:-1:-1;;;;;3365:7:35;3351:10;:21;3343:30;;;;;;3474:5;;:29;;;;;;-1:-1:-1;;;;;3474:29:35;;;;;;;;;;;;;;;:5;;;;;:13;;:29;;;;;:5;;:29;;;;;;;:5;;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;3474:29:35;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3514:5:35;;:32;;;;;;3526:10;3514:32;;;;;;;;;;;;-1:-1:-1;;;;;3514:5:35;;;;-1:-1:-1;3514:11:35;;-1:-1:-1;3514:32:35;;;;;:5;;:32;;;;;;;;:5;;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;3514:32:35;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3514:32:35;;;;3202:352;;:::o;6412:705:20:-;6547:14;6579:19;1619:4:35;-1:-1:-1;;;;;1594:30:35;:5;;;;;;;;;-1:-1:-1;;;;;1594:5:35;-1:-1:-1;;;;;1594:11:35;;:13;;;;;-1:-1:-1;;;1594:13:35;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1594:13:35;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1594:13:35;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1594:13:35;-1:-1:-1;;;;;1594:30:35;;1586:39;;;;;;6495:9:20;3899:13;;3855:40;3881:13;3855:21;;:25;;:40;;;;:::i;:::-;:57;;3848:65;;;;991:15;2945:11;:28;;2938:36;;;;6601:24;6615:9;6601:13;:24::i;:::-;6636:11;;:31;;6579:46;;-1:-1:-1;;;;;;6636:11:20;;6657:9;6636:31;;;;;:11;:31;:11;:31;6657:9;6636:11;:31;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;6751:21:20;;:36;;6777:9;6751:36;:25;:36;:::i;:::-;6727:21;:60;6838:5;;:36;;;;;;6850:10;6838:36;;;;;;;;;;;;-1:-1:-1;;;;;6838:5:20;;;;:11;;:36;;;;;:5;;:36;;;;;;;;:5;;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;6838:36:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;6942:5:20;;6954:11;;6942:37;;;;;;-1:-1:-1;;;;;6954:11:20;;;6942:37;;;;;;;;;;;;:5;;;;;-1:-1:-1;6942:11:20;;-1:-1:-1;6942:37:20;;;;;:5;;:37;;;;;;;:5;;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;6942:37:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;7032:48:20;;;7057:9;7032:48;;;;;;;;;;7045:10;;-1:-1:-1;7032:48:20;;-1:-1:-1;7032:48:20;;;;;;;;;-1:-1:-1;7098:11:20;6412:705;-1:-1:-1;6412:705:20:o;1070:234:45:-;1130:7;;1183;;1179:34;;;1212:1;1205:8;;;;1179:34;-1:-1:-1;1238:7:45;;;1243:2;1238;:7;1264:6;;;;;;;;:12;1256:21;;;;;;1295:1;1288:8;;1070:234;;;;;;:::o;1540:154::-;1600:7;;1628:6;;;1620:15;;;;;;1663:2;1658;:7;;;;;;;;;1540:154;-1:-1:-1;;;;1540:154:45:o;336:153::-;396:7;428;;;454;;;;446:16;;;;",
  "source": "pragma solidity 0.4.26;\nimport '../crowdsale/CrowdsaleController.sol';\n\n/*\n    Test crowdsale controller with start time < now < end time\n*/\ncontract TestCrowdsaleController is CrowdsaleController {\n    using SafeMath for uint256;\n\n    \n    uint256 public constant BTCS_ETHER_CAP_SMALL = 2 ether; // maximum bitcoin suisse ether contribution\n\n    constructor(\n        ISmartToken _token,\n        uint256 _startTime,\n        address _beneficiary,\n        address _btcs,\n        bytes32 _realEtherCapHash,\n        uint256 _startTimeOverride)\n        public\n        CrowdsaleController(_token, _startTime, _beneficiary, _btcs, _realEtherCapHash)\n    {\n        startTime = _startTimeOverride;\n        endTime = startTime + DURATION;\n    }\n\n    modifier btcsEtherCapNotReached(uint256 _ethContribution) {\n        assert(totalEtherContributed.add(_ethContribution) <= BTCS_ETHER_CAP_SMALL);\n        _;\n    }\n}\n",
  "sourcePath": "/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/helpers/TestCrowdsaleController.sol",
  "ast": {
    "absolutePath": "/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/helpers/TestCrowdsaleController.sol",
    "exportedSymbols": {
      "TestCrowdsaleController": [
        11776
      ]
    },
    "id": 11777,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11718,
        "literals": [
          "solidity",
          "0.4",
          ".26"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:26"
      },
      {
        "absolutePath": "/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/crowdsale/CrowdsaleController.sol",
        "file": "../crowdsale/CrowdsaleController.sol",
        "id": 11719,
        "nodeType": "ImportDirective",
        "scope": 11777,
        "sourceUnit": 10942,
        "src": "24:46:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11720,
              "name": "CrowdsaleController",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10941,
              "src": "177:19:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CrowdsaleController_$10941",
                "typeString": "contract CrowdsaleController"
              }
            },
            "id": 11721,
            "nodeType": "InheritanceSpecifier",
            "src": "177:19:26"
          }
        ],
        "contractDependencies": [
          10941,
          12871,
          13122,
          13754,
          13904,
          13951,
          14148,
          14164
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11776,
        "linearizedBaseContracts": [
          11776,
          10941,
          12871,
          13904,
          13951,
          13754,
          14164,
          14148,
          13122
        ],
        "name": "TestCrowdsaleController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11724,
            "libraryName": {
              "contractScope": null,
              "id": 11722,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13857,
              "src": "209:8:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$13857",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "203:27:26",
            "typeName": {
              "id": 11723,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "222:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 11727,
            "name": "BTCS_ETHER_CAP_SMALL",
            "nodeType": "VariableDeclaration",
            "scope": 11776,
            "src": "241:54:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11725,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "241:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 11726,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "288:7:26",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000000000000000000_by_1",
                "typeString": "int_const 2000000000000000000"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11759,
              "nodeType": "Block",
              "src": "647:87:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11749,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10596,
                      "src": "657:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11750,
                      "name": "_startTimeOverride",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11739,
                      "src": "669:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "657:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11752,
                  "nodeType": "ExpressionStatement",
                  "src": "657:30:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11753,
                      "name": "endTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10599,
                      "src": "697:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 11754,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10596,
                        "src": "707:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 11755,
                        "name": "DURATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10578,
                        "src": "719:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "707:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "697:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11758,
                  "nodeType": "ExpressionStatement",
                  "src": "697:30:26"
                }
              ]
            },
            "documentation": null,
            "id": 11760,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11742,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11729,
                    "src": "583:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$13103",
                      "typeString": "contract ISmartToken"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11743,
                    "name": "_startTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11731,
                    "src": "591:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11744,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11733,
                    "src": "603:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11745,
                    "name": "_btcs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11735,
                    "src": "617:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11746,
                    "name": "_realEtherCapHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11737,
                    "src": "624:17:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 11747,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11741,
                  "name": "CrowdsaleController",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10941,
                  "src": "563:19:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CrowdsaleController_$10941_$",
                    "typeString": "type(contract CrowdsaleController)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "563:79:26"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11729,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 11760,
                  "src": "368:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISmartToken_$13103",
                    "typeString": "contract ISmartToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11728,
                    "name": "ISmartToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13103,
                    "src": "368:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$13103",
                      "typeString": "contract ISmartToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11731,
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 11760,
                  "src": "396:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11733,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 11760,
                  "src": "424:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11735,
                  "name": "_btcs",
                  "nodeType": "VariableDeclaration",
                  "scope": 11760,
                  "src": "454:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11737,
                  "name": "_realEtherCapHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 11760,
                  "src": "477:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11736,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11739,
                  "name": "_startTimeOverride",
                  "nodeType": "VariableDeclaration",
                  "scope": 11760,
                  "src": "512:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:181:26"
            },
            "payable": false,
            "returnParameters": {
              "id": 11748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:0:26"
            },
            "scope": 11776,
            "src": "347:387:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11774,
              "nodeType": "Block",
              "src": "798:103:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 11767,
                              "name": "_ethContribution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11762,
                              "src": "841:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 11765,
                              "name": "totalEtherContributed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10605,
                              "src": "815:21:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 11766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13780,
                            "src": "815:25:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 11768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "815:43:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 11769,
                          "name": "BTCS_ETHER_CAP_SMALL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11727,
                          "src": "862:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "815:67:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11764,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14178,
                      "src": "808:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "808:75:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11772,
                  "nodeType": "ExpressionStatement",
                  "src": "808:75:26"
                },
                {
                  "id": 11773,
                  "nodeType": "PlaceholderStatement",
                  "src": "893:1:26"
                }
              ]
            },
            "documentation": null,
            "id": 11775,
            "name": "btcsEtherCapNotReached",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 11763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11762,
                  "name": "_ethContribution",
                  "nodeType": "VariableDeclaration",
                  "scope": 11775,
                  "src": "772:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "771:26:26"
            },
            "src": "740:161:26",
            "visibility": "internal"
          }
        ],
        "scope": 11777,
        "src": "141:762:26"
      }
    ],
    "src": "0:904:26"
  },
  "legacyAST": {
    "absolutePath": "/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/helpers/TestCrowdsaleController.sol",
    "exportedSymbols": {
      "TestCrowdsaleController": [
        11776
      ]
    },
    "id": 11777,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11718,
        "literals": [
          "solidity",
          "0.4",
          ".26"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:26"
      },
      {
        "absolutePath": "/home/safu/minddeft/jointerInc/bancorTry/temp/contracts/solidity/contracts/crowdsale/CrowdsaleController.sol",
        "file": "../crowdsale/CrowdsaleController.sol",
        "id": 11719,
        "nodeType": "ImportDirective",
        "scope": 11777,
        "sourceUnit": 10942,
        "src": "24:46:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11720,
              "name": "CrowdsaleController",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10941,
              "src": "177:19:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CrowdsaleController_$10941",
                "typeString": "contract CrowdsaleController"
              }
            },
            "id": 11721,
            "nodeType": "InheritanceSpecifier",
            "src": "177:19:26"
          }
        ],
        "contractDependencies": [
          10941,
          12871,
          13122,
          13754,
          13904,
          13951,
          14148,
          14164
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11776,
        "linearizedBaseContracts": [
          11776,
          10941,
          12871,
          13904,
          13951,
          13754,
          14164,
          14148,
          13122
        ],
        "name": "TestCrowdsaleController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 11724,
            "libraryName": {
              "contractScope": null,
              "id": 11722,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13857,
              "src": "209:8:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$13857",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "203:27:26",
            "typeName": {
              "id": 11723,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "222:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 11727,
            "name": "BTCS_ETHER_CAP_SMALL",
            "nodeType": "VariableDeclaration",
            "scope": 11776,
            "src": "241:54:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11725,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "241:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 11726,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "288:7:26",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000000000000000000_by_1",
                "typeString": "int_const 2000000000000000000"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11759,
              "nodeType": "Block",
              "src": "647:87:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11749,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10596,
                      "src": "657:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11750,
                      "name": "_startTimeOverride",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11739,
                      "src": "669:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "657:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11752,
                  "nodeType": "ExpressionStatement",
                  "src": "657:30:26"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11753,
                      "name": "endTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10599,
                      "src": "697:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 11754,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10596,
                        "src": "707:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 11755,
                        "name": "DURATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10578,
                        "src": "719:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "707:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "697:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11758,
                  "nodeType": "ExpressionStatement",
                  "src": "697:30:26"
                }
              ]
            },
            "documentation": null,
            "id": 11760,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 11742,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11729,
                    "src": "583:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$13103",
                      "typeString": "contract ISmartToken"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11743,
                    "name": "_startTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11731,
                    "src": "591:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11744,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11733,
                    "src": "603:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11745,
                    "name": "_btcs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11735,
                    "src": "617:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 11746,
                    "name": "_realEtherCapHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11737,
                    "src": "624:17:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 11747,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11741,
                  "name": "CrowdsaleController",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10941,
                  "src": "563:19:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CrowdsaleController_$10941_$",
                    "typeString": "type(contract CrowdsaleController)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "563:79:26"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11729,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 11760,
                  "src": "368:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISmartToken_$13103",
                    "typeString": "contract ISmartToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11728,
                    "name": "ISmartToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13103,
                    "src": "368:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISmartToken_$13103",
                      "typeString": "contract ISmartToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11731,
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 11760,
                  "src": "396:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11733,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 11760,
                  "src": "424:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11735,
                  "name": "_btcs",
                  "nodeType": "VariableDeclaration",
                  "scope": 11760,
                  "src": "454:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11737,
                  "name": "_realEtherCapHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 11760,
                  "src": "477:25:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11736,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11739,
                  "name": "_startTimeOverride",
                  "nodeType": "VariableDeclaration",
                  "scope": 11760,
                  "src": "512:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:181:26"
            },
            "payable": false,
            "returnParameters": {
              "id": 11748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:0:26"
            },
            "scope": 11776,
            "src": "347:387:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11774,
              "nodeType": "Block",
              "src": "798:103:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 11767,
                              "name": "_ethContribution",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11762,
                              "src": "841:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 11765,
                              "name": "totalEtherContributed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10605,
                              "src": "815:21:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 11766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13780,
                            "src": "815:25:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 11768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "815:43:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 11769,
                          "name": "BTCS_ETHER_CAP_SMALL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11727,
                          "src": "862:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "815:67:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11764,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14178,
                      "src": "808:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "808:75:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11772,
                  "nodeType": "ExpressionStatement",
                  "src": "808:75:26"
                },
                {
                  "id": 11773,
                  "nodeType": "PlaceholderStatement",
                  "src": "893:1:26"
                }
              ]
            },
            "documentation": null,
            "id": 11775,
            "name": "btcsEtherCapNotReached",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 11763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11762,
                  "name": "_ethContribution",
                  "nodeType": "VariableDeclaration",
                  "scope": 11775,
                  "src": "772:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "771:26:26"
            },
            "src": "740:161:26",
            "visibility": "internal"
          }
        ],
        "scope": 11777,
        "src": "141:762:26"
      }
    ],
    "src": "0:904:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-06-10T14:32:18.813Z",
  "devdoc": {
    "methods": {
      "acceptOwnership()": {
        "details": "used by a new owner to accept an ownership transfer\r"
      },
      "acceptTokenOwnership()": {
        "details": "used by a new owner to accept a token ownership transfer\r can only be called by the contract owner\r"
      },
      "claimTokens(address,uint256)": {
        "details": "allows the associated BancorX contract to claim tokens from any address (so that users\r dont have to first give allowance when calling BancorX)\r \r",
        "params": {
          "_amount": "the amount of tokens to claim\r",
          "_from": "address to claim the tokens from\r"
        }
      },
      "computeRealCap(uint256,uint256)": {
        "details": "computes the real cap based on the given cap & key\r \r",
        "params": {
          "_cap": "cap\r",
          "_key": "key used to compute the cap hash\r \r"
        },
        "return": "computed real cap hash\r"
      },
      "computeReturn(uint256)": {
        "details": "computes the number of tokens that should be issued for a given contribution\r \r",
        "params": {
          "_contribution": "contribution amount\r \r"
        },
        "return": "computed number of tokens\r"
      },
      "contributeBTCs()": {
        "details": "Contribution through BTCs (Bitcoin Suisse only)\r can only be called before the crowdsale started\r \r",
        "return": "tokens issued in return\r"
      },
      "contributeETH()": {
        "details": "ETH contribution\r can only be called during the crowdsale\r \r",
        "return": "tokens issued in return\r"
      },
      "enableRealCap(uint256,uint256)": {
        "details": "enables the real cap defined on deployment\r \r",
        "params": {
          "_cap": "predefined cap\r",
          "_key": "key used to compute the cap hash\r"
        }
      },
      "setBancorX(address)": {
        "details": "allows the owner to set the associated BancorX contract\r",
        "params": {
          "_bancorX": "BancorX contract\r"
        }
      },
      "transferOwnership(address)": {
        "details": "allows transferring the contract ownership\r the new owner still needs to accept the transfer\r can only be called by the contract owner\r \r",
        "params": {
          "_newOwner": "new contract owner\r"
        }
      },
      "transferTokenOwnership(address)": {
        "details": "allows transferring the token ownership\r the new owner needs to accept the transfer\r can only be called by the contract owner\r \r",
        "params": {
          "_newOwner": "new token owner\r"
        }
      },
      "withdrawFromToken(address,address,uint256)": {
        "details": "withdraws tokens held by the controller and sends them to an account\r can only be called by the owner\r \r",
        "params": {
          "_amount": "amount to withdraw\r",
          "_to": "account to receive the new amount\r",
          "_token": "ERC20 token contract address\r"
        }
      },
      "withdrawTokens(address,address,uint256)": {
        "details": "withdraws tokens held by the contract and sends them to an account\r can only be called by the owner\r \r",
        "params": {
          "_amount": "amount to withdraw\r",
          "_to": "account to receive the new amount\r",
          "_token": "ERC20 token contract address\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}